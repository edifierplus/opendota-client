# coding: utf-8

"""
    OpenDota API

    # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more.   # noqa: E501

    OpenAPI spec version: 18.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class InlineResponse20022Result(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'gold_per_min': 'list[InlineResponse20022ResultGoldPerMin]',
        'xp_per_min': 'list[InlineResponse20022ResultGoldPerMin]',
        'kills_per_min': 'list[InlineResponse20022ResultGoldPerMin]',
        'last_hits_per_min': 'list[InlineResponse20022ResultGoldPerMin]',
        'hero_damage_per_min': 'list[InlineResponse20022ResultGoldPerMin]',
        'hero_healing_per_min': 'list[InlineResponse20022ResultGoldPerMin]',
        'tower_damage': 'list[InlineResponse20022ResultGoldPerMin]'
    }

    attribute_map = {
        'gold_per_min': 'gold_per_min',
        'xp_per_min': 'xp_per_min',
        'kills_per_min': 'kills_per_min',
        'last_hits_per_min': 'last_hits_per_min',
        'hero_damage_per_min': 'hero_damage_per_min',
        'hero_healing_per_min': 'hero_healing_per_min',
        'tower_damage': 'tower_damage'
    }

    def __init__(self, gold_per_min=None, xp_per_min=None, kills_per_min=None, last_hits_per_min=None, hero_damage_per_min=None, hero_healing_per_min=None, tower_damage=None):  # noqa: E501
        """InlineResponse20022Result - a model defined in Swagger"""  # noqa: E501

        self._gold_per_min = None
        self._xp_per_min = None
        self._kills_per_min = None
        self._last_hits_per_min = None
        self._hero_damage_per_min = None
        self._hero_healing_per_min = None
        self._tower_damage = None
        self.discriminator = None

        if gold_per_min is not None:
            self.gold_per_min = gold_per_min
        if xp_per_min is not None:
            self.xp_per_min = xp_per_min
        if kills_per_min is not None:
            self.kills_per_min = kills_per_min
        if last_hits_per_min is not None:
            self.last_hits_per_min = last_hits_per_min
        if hero_damage_per_min is not None:
            self.hero_damage_per_min = hero_damage_per_min
        if hero_healing_per_min is not None:
            self.hero_healing_per_min = hero_healing_per_min
        if tower_damage is not None:
            self.tower_damage = tower_damage

    @property
    def gold_per_min(self):
        """Gets the gold_per_min of this InlineResponse20022Result.  # noqa: E501


        :return: The gold_per_min of this InlineResponse20022Result.  # noqa: E501
        :rtype: list[InlineResponse20022ResultGoldPerMin]
        """
        return self._gold_per_min

    @gold_per_min.setter
    def gold_per_min(self, gold_per_min):
        """Sets the gold_per_min of this InlineResponse20022Result.


        :param gold_per_min: The gold_per_min of this InlineResponse20022Result.  # noqa: E501
        :type: list[InlineResponse20022ResultGoldPerMin]
        """

        self._gold_per_min = gold_per_min

    @property
    def xp_per_min(self):
        """Gets the xp_per_min of this InlineResponse20022Result.  # noqa: E501


        :return: The xp_per_min of this InlineResponse20022Result.  # noqa: E501
        :rtype: list[InlineResponse20022ResultGoldPerMin]
        """
        return self._xp_per_min

    @xp_per_min.setter
    def xp_per_min(self, xp_per_min):
        """Sets the xp_per_min of this InlineResponse20022Result.


        :param xp_per_min: The xp_per_min of this InlineResponse20022Result.  # noqa: E501
        :type: list[InlineResponse20022ResultGoldPerMin]
        """

        self._xp_per_min = xp_per_min

    @property
    def kills_per_min(self):
        """Gets the kills_per_min of this InlineResponse20022Result.  # noqa: E501


        :return: The kills_per_min of this InlineResponse20022Result.  # noqa: E501
        :rtype: list[InlineResponse20022ResultGoldPerMin]
        """
        return self._kills_per_min

    @kills_per_min.setter
    def kills_per_min(self, kills_per_min):
        """Sets the kills_per_min of this InlineResponse20022Result.


        :param kills_per_min: The kills_per_min of this InlineResponse20022Result.  # noqa: E501
        :type: list[InlineResponse20022ResultGoldPerMin]
        """

        self._kills_per_min = kills_per_min

    @property
    def last_hits_per_min(self):
        """Gets the last_hits_per_min of this InlineResponse20022Result.  # noqa: E501


        :return: The last_hits_per_min of this InlineResponse20022Result.  # noqa: E501
        :rtype: list[InlineResponse20022ResultGoldPerMin]
        """
        return self._last_hits_per_min

    @last_hits_per_min.setter
    def last_hits_per_min(self, last_hits_per_min):
        """Sets the last_hits_per_min of this InlineResponse20022Result.


        :param last_hits_per_min: The last_hits_per_min of this InlineResponse20022Result.  # noqa: E501
        :type: list[InlineResponse20022ResultGoldPerMin]
        """

        self._last_hits_per_min = last_hits_per_min

    @property
    def hero_damage_per_min(self):
        """Gets the hero_damage_per_min of this InlineResponse20022Result.  # noqa: E501


        :return: The hero_damage_per_min of this InlineResponse20022Result.  # noqa: E501
        :rtype: list[InlineResponse20022ResultGoldPerMin]
        """
        return self._hero_damage_per_min

    @hero_damage_per_min.setter
    def hero_damage_per_min(self, hero_damage_per_min):
        """Sets the hero_damage_per_min of this InlineResponse20022Result.


        :param hero_damage_per_min: The hero_damage_per_min of this InlineResponse20022Result.  # noqa: E501
        :type: list[InlineResponse20022ResultGoldPerMin]
        """

        self._hero_damage_per_min = hero_damage_per_min

    @property
    def hero_healing_per_min(self):
        """Gets the hero_healing_per_min of this InlineResponse20022Result.  # noqa: E501


        :return: The hero_healing_per_min of this InlineResponse20022Result.  # noqa: E501
        :rtype: list[InlineResponse20022ResultGoldPerMin]
        """
        return self._hero_healing_per_min

    @hero_healing_per_min.setter
    def hero_healing_per_min(self, hero_healing_per_min):
        """Sets the hero_healing_per_min of this InlineResponse20022Result.


        :param hero_healing_per_min: The hero_healing_per_min of this InlineResponse20022Result.  # noqa: E501
        :type: list[InlineResponse20022ResultGoldPerMin]
        """

        self._hero_healing_per_min = hero_healing_per_min

    @property
    def tower_damage(self):
        """Gets the tower_damage of this InlineResponse20022Result.  # noqa: E501


        :return: The tower_damage of this InlineResponse20022Result.  # noqa: E501
        :rtype: list[InlineResponse20022ResultGoldPerMin]
        """
        return self._tower_damage

    @tower_damage.setter
    def tower_damage(self, tower_damage):
        """Sets the tower_damage of this InlineResponse20022Result.


        :param tower_damage: The tower_damage of this InlineResponse20022Result.  # noqa: E501
        :type: list[InlineResponse20022ResultGoldPerMin]
        """

        self._tower_damage = tower_damage

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20022Result, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20022Result):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
